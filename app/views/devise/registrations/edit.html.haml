- title 'Edit account on Dabble Me'

.row
  .col-md-8.col-md-offset-2
    %h3 SETTINGS
    %br

  .col-md-8.col-md-offset-2
    .alert.alert-warning
      -if current_user.is_pro?
        Thanks for subscribing to
        = link_to current_user.plan_name, subscribe_path, class: "alert-link"
      - else
        =link_to subscribe_path, class: "float-left" do
          %button.btn.btn-warning Subscribe Now
        %strong Dabble Me PRO
        for $3/mo unlocks premium features like changing the frequency of emails, adding/editing entries via the web, adding a photo, rich formatting, and search.
    %hr
    %strong
      %span{style: "margin-right: 5px;"}
        Your post-by-email unique address to send new entries is
      %code
        =mail_to "#{@user.user_key}@#{ENV['SMTP_DOMAIN']}", "#{@user.user_key}@#{ENV['SMTP_DOMAIN']}", encode: "hex", target: "_blank", style: "color: #a41100;"
    %hr

  = render partial: 'user_settings', locals: { form_path: registration_path(resource_name) }

  .col-md-12.center
    %br
    - if current_user.is_pro? && current_user.plan_type.present?
      - add_text = " To downgrade or cancel your paid subscription, you'll need to do so separately at #{current_user.plan_type}!"
      - show_warning = " You will need to cancel your subscription *separately* at #{current_user.plan_type_unlinked}"
    =link_to registration_path(resource_name), class: "s-delete j-delete-user", data: { confirm: "Are you sure? This will delete your account and #{pluralize(@user.entries.count,'entry')}. There is no undo.#{show_warning}." }, method: :delete do
      %h5
        Delete your account & all associated entries
    - if current_user.is_pro? && current_user.plan_type.present?
      = add_text.strip.html_safe
      %br
    %br

    #export.col-md-8.col-md-offset-2.alert.alert-info
      Export all entries as
      =link_to "TXT", export_entries_path(:txt)
      (plain text)
      or
      =link_to "JSON", export_entries_path(:json)
      (rich formatting).
      -if current_user.is_pro? && current_user.entries.only_images.any?
        Export a
        =link_to("list of your Image URLs", export_entries_path(:txt, only_images: true)) + "."
        You can use a script or app to download these to your computer.
    %br
